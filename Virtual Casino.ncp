<Project>
  <Name>Virtual Casino</Name>
  <ProjectItem type="NClass.DiagramEditor.ClassDiagram.Diagram" assembly="NClass.DiagramEditor, Version=2.4.1823.0, Culture=neutral, PublicKeyToken=null">
    <Name>Untitled</Name>
    <Language>CSharp</Language>
    <Entities>
      <Entity type="Class">
        <Name>BlackJack</Name>
        <Access>Public</Access>
        <Location left="289" top="304" />
        <Size width="162" height="519" />
        <Collapsed>True</Collapsed>
        <Member type="Field">Deck D</Member>
        <Member type="Field">Hand Dealer</Member>
        <Member type="Field">Hand Player</Member>
        <Member type="Field">int DWins</Member>
        <Member type="Field">int PWins</Member>
        <Member type="Field">bool Stood</Member>
        <Member type="Field">bool BetPlaced</Member>
        <Member type="Field">int Money</Member>
        <Member type="Field">int Bet</Member>
        <Member type="Field">User user</Member>
        <Member type="Field">BlackJackLog log</Member>
        <Member type="Constructor">public BlackJack()</Member>
        <Member type="Property">public User User { get; set; }</Member>
        <Member type="Method">private void InitialDeal()</Member>
        <Member type="Method">private void DrawCard(Hand H)</Member>
        <Member type="Method">private void UpdateText()</Member>
        <Member type="Method">private void CheckWin()</Member>
        <Member type="Method">private void BlankSlateProtocol()</Member>
        <Member type="Method">private void PlayerWin()</Member>
        <Member type="Method">private void DealerWin()</Member>
        <Member type="Method">private void Deal_Click(object sender, EventArgs e)</Member>
        <Member type="Method">private void Hit_Click(object sender, EventArgs e)</Member>
        <Member type="Method">private void Stand_Click(object sender, EventArgs e)</Member>
        <Member type="Method">private void betBtn_Click(object sender, EventArgs e)</Member>
        <Member type="Method">private void Form1_FormClosing(object sender, FormClosingEventArgs e)</Member>
        <Member type="Method">private void BlackJack_Shown(object sender, EventArgs e)</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>Card</Name>
        <Access>Public</Access>
        <Location left="98" top="518" />
        <Size width="162" height="197" />
        <Collapsed>True</Collapsed>
        <Member type="Field">int value</Member>
        <Member type="Field">int ID</Member>
        <Member type="Field">string suit</Member>
        <Member type="Field">private char Char</Member>
        <Member type="Field">static char[] symbol = { '♥', '♠', '♦', '♣' }</Member>
        <Member type="Method">public string toString()</Member>
        <Member type="Method">public string toSimpleString()</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>Deck</Name>
        <Access>Public</Access>
        <Location left="187" top="418" />
        <Size width="162" height="179" />
        <Collapsed>True</Collapsed>
        <Member type="Field">Card[] cards</Member>
        <Member type="Constructor">public Deck()</Member>
        <Member type="Method">public void GetDeck()</Member>
        <Member type="Method">public void Shuffle()</Member>
        <Member type="Method">public void PrintDeck()</Member>
        <Member type="Method">public Card GetTopCard()</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>Hand</Name>
        <Access>Public</Access>
        <Location left="10" top="418" />
        <Size width="162" height="213" />
        <Collapsed>True</Collapsed>
        <Member type="Field">List&lt;Card&gt; hand</Member>
        <Member type="Field">bool Dealer</Member>
        <Member type="Field">private char D</Member>
        <Member type="Constructor">public Hand(bool dealer)</Member>
        <Member type="Method">public void AddCard(Card c)</Member>
        <Member type="Method">public int GetCount()</Member>
        <Member type="Method">public string GetHand()</Member>
        <Member type="Method">private string GetHandEXP()</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>VirtualCasinoLogin</Name>
        <Access>Public</Access>
        <Location left="576" top="209" />
        <Size width="162" height="349" />
        <Collapsed>True</Collapsed>
        <Member type="Field">string username</Member>
        <Member type="Field">string password</Member>
        <Member type="Field">bool loggedIn</Member>
        <Member type="Field">bool guestAccount</Member>
        <Member type="Field">List&lt;User&gt; accounts</Member>
        <Member type="Field">MainMenu vc</Member>
        <Member type="Field">SignInLog log</Member>
        <Member type="Constructor">public VirtualCasinoLogin()</Member>
        <Member type="Method">private void uname_TextChanged(object sender, EventArgs e)</Member>
        <Member type="Method">private void pwd_TextChanged(object sender, EventArgs e)</Member>
        <Member type="Method">private void newAcct_Click(object sender, EventArgs e)</Member>
        <Member type="Method">private void guest_Click(object sender, EventArgs e)</Member>
        <Member type="Method">private void confirmLogin_Click(object sender, EventArgs e)</Member>
        <Member type="Method">private void VirtualCasinoLogin_FormClosed(object sender, FormClosedEventArgs e)</Member>
        <Member type="Method">private void VirtualCasinoLogin_Shown(object sender, EventArgs e)</Member>
        <Member type="Method">public User SaveNewUser()</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>User</Name>
        <Access>Public</Access>
        <Location left="429" top="582" />
        <Size width="162" height="264" />
        <Collapsed>True</Collapsed>
        <Member type="Field">int _bank</Member>
        <Member type="Field">string _username</Member>
        <Member type="Field">string _password</Member>
        <Member type="Field">DateTime _lastPlayed</Member>
        <Member type="Field">private bool _admin</Member>
        <Member type="Constructor">public User(string u, string p)</Member>
        <Member type="Constructor">public User(string u, string p, int b, DateTime lp)</Member>
        <Member type="Method">public string WriteUser()</Member>
        <Member type="Method">public static User ReadUser(string s)</Member>
        <Member type="Method">public decimal getWinPercentage()</Member>
        <Member type="Method">public bool Login(string u, string p)</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>MainMenu</Name>
        <Access>Public</Access>
        <Location left="511" top="304" />
        <Size width="162" height="315" />
        <Collapsed>True</Collapsed>
        <Member type="Field">private BlackJack bj</Member>
        <Member type="Field">private VirtualCasinoLogin vcl</Member>
        <Member type="Field">private MainMenuLog log</Member>
        <Member type="Field">public User user</Member>
        <Member type="Field">public bool loggedIn</Member>
        <Member type="Constructor">public MainMenu()</Member>
        <Member type="Method">private void Login()</Member>
        <Member type="Method">public void UpdateText()</Member>
        <Member type="Method">public void Save()</Member>
        <Member type="Method">private void BlankSlateProtocol()</Member>
        <Member type="Method">private void blackjack_Click(object sender, EventArgs e)</Member>
        <Member type="Method">private void login_Click(object sender, EventArgs e)</Member>
        <Member type="Method">private void log_button_Click(object sender, EventArgs e)</Member>
        <Member type="Method">private void MainMenu_FormClosed(object sender, EventArgs e)</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>Log</Name>
        <Access>Public</Access>
        <Location left="210" top="111" />
        <Size width="162" height="145" />
        <Collapsed>True</Collapsed>
        <Member type="Method">protected void AppendLogFile(string s)</Member>
        <Member type="Method">public void LogOpen()</Member>
        <Member type="Method">public void LogOpen()</Member>
        <Member type="Property">protected virtual string Type { get; }</Member>
        <Modifier>Abstract</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>SignInLog</Name>
        <Access>Public</Access>
        <Location left="799" top="111" />
        <Size width="162" height="128" />
        <Collapsed>True</Collapsed>
        <Member type="Property">protected override string Type { get; }</Member>
        <Member type="Method">public void LogGuest()</Member>
        <Member type="Method">public override void LogSignIn(string username)</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>BlackJackLog</Name>
        <Access>Public</Access>
        <Location left="10" top="243" />
        <Size width="162" height="151" />
        <Collapsed>True</Collapsed>
        <Member type="Field">public static int PLAYER_WIN = 1</Member>
        <Member type="Field">public static int DEALER_WIN = 2</Member>
        <Member type="Field">public static int PUSH = 3</Member>
        <Member type="Property">protected override string Type { get; }</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>MainMenuLog</Name>
        <Access>Public</Access>
        <Location left="732" top="304" />
        <Size width="162" height="128" />
        <Collapsed>True</Collapsed>
        <Member type="Property">protected override string Type { get; }</Member>
        <Member type="Method">public void LogViewLog()</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>Form</Name>
        <Access>Public</Access>
        <Location left="397" top="186" />
        <Size width="162" height="216" />
        <Collapsed>True</Collapsed>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>Roulette</Name>
        <Access>Public</Access>
        <Location left="397" top="367" />
        <Size width="162" height="451" />
        <Collapsed>True</Collapsed>
        <Member type="Field">public List&lt;Bet&gt; bets</Member>
        <Member type="Field">public List&lt;int&gt; history</Member>
        <Member type="Field">private RouletteLog log</Member>
        <Member type="Field">private User _user</Member>
        <Member type="Field">private int index</Member>
        <Member type="Field">public static int _00 = 37</Member>
        <Member type="Field">private static int[] Order</Member>
        <Member type="Field">public static int[] REDS</Member>
        <Member type="Field">public static int[] BLACKS</Member>
        <Member type="Field">public static int[] TOP_ROW</Member>
        <Member type="Field">public static int[] MID_ROW</Member>
        <Member type="Field">public static int[] BOT_ROW</Member>
        <Member type="Property">public User User { get; set; }</Member>
        <Member type="Constructor">public Roulette()</Member>
        <Member type="Method">private void placeBets_Click(object sender, EventArgs e)</Member>
        <Member type="Method">private void spin_Click(object sender, EventArgs e)</Member>
        <Member type="Method">private void Roulette_Shown(object sender, EventArgs e)</Member>
        <Member type="Method">private void Roulette_FormClosed(object sender, EventArgs e)</Member>
        <Member type="Method">public void AddBet(int money, int location)</Member>
        <Member type="Method">private void BlankSlateProtocol()</Member>
        <Member type="Method">public void UpdateText()</Member>
        <Member type="Method">private void CheckWin(int result)</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>RouletteBoard</Name>
        <Access>Public</Access>
        <Location left="529" top="485" />
        <Size width="162" height="77" />
        <Collapsed>True</Collapsed>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>Bet</Name>
        <Access>Public</Access>
        <Location left="330" top="485" />
        <Size width="162" height="128" />
        <Collapsed>False</Collapsed>
        <Member type="Field">int bet</Member>
        <Member type="Field">int type</Member>
        <Member type="Property">public int NewProperty { get; set; }</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>GameLog</Name>
        <Access>Public</Access>
        <Location left="10" top="71" />
        <Size width="162" height="145" />
        <Collapsed>True</Collapsed>
        <Member type="Property">protected override string Type { get; }</Member>
        <Member type="Method">public void LogResult(string result)</Member>
        <Member type="Method">public void LogBet(int money)</Member>
        <Member type="Method">public void LogStart()</Member>
        <Modifier>Abstract</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>MenuLog</Name>
        <Access>Public</Access>
        <Location left="10" top="111" />
        <Size width="162" height="128" />
        <Collapsed>True</Collapsed>
        <Member type="Property">protected override string Type { get; }</Member>
        <Member type="Method">public virtual void LogSignIn(string username)</Member>
        <Member type="Method">public virtual void LogSignOut(string username)</Member>
        <Modifier>Abstract</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>RouletteLog</Name>
        <Access>Public</Access>
        <Location left="10" top="155" />
        <Size width="162" height="383" />
        <Collapsed>True</Collapsed>
        <Member type="Field">public static string PLAYER_WIN = "Player has won ${0}"</Member>
        <Member type="Field">public static string NO_WIN = "Player did not win"</Member>
        <Member type="Field">public static string REDS = "Reds"</Member>
        <Member type="Field">public static string BLACKS = "Blacks"</Member>
        <Member type="Field">public static string EVENS = "Evens"</Member>
        <Member type="Field">public static string ODDS = "Odds"</Member>
        <Member type="Field">public static string FIRST_HALF = "1 through 18"</Member>
        <Member type="Field">public static string SECOND_HALF = "19 through 36"</Member>
        <Member type="Field">public static strng TOP_ROW = "the Top Row"</Member>
        <Member type="Field">public static string MID_ROW = "the Middle Row"</Member>
        <Member type="Field">public static string BOT_ROW = "the Bottom Row"</Member>
        <Member type="Field">public static string FIRST_12 = "1 through 12"</Member>
        <Member type="Field">public static string SECOND_12 = "13 thorugh 24"</Member>
        <Member type="Field">public static string THIRD_12 = "25 through 36"</Member>
        <Member type="Property">protected override string Type { get; }</Member>
        <Member type="Method">public void LogResult(string result, int amount)</Member>
        <Member type="Method">public void LogBet(int money, string on)</Member>
        <Member type="Method">public void LogBet(int money, int on)</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>RouletteBoardLog</Name>
        <Access>Public</Access>
        <Location left="10" top="197" />
        <Size width="162" height="94" />
        <Collapsed>True</Collapsed>
        <Member type="Property">protected override string Type { get; }</Member>
        <Modifier>None</Modifier>
      </Entity>
    </Entities>
    <Relationships>
      <Relationship type="Generalization" first="8" second="7">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
      </Relationship>
      <Relationship type="Generalization" first="10" second="8">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
      </Relationship>
      <Relationship type="Association" first="3" second="1">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <Direction>Bidirectional</Direction>
        <AssociationType>Aggregation</AssociationType>
      </Relationship>
      <Relationship type="Association" first="2" second="1">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <Direction>Bidirectional</Direction>
        <AssociationType>Aggregation</AssociationType>
      </Relationship>
      <Relationship type="Generalization" first="4" second="11">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
      </Relationship>
      <Relationship type="Association" first="0" second="2">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <Direction>Bidirectional</Direction>
        <AssociationType>Aggregation</AssociationType>
      </Relationship>
      <Relationship type="Association" first="0" second="3">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <Direction>Bidirectional</Direction>
        <AssociationType>Aggregation</AssociationType>
      </Relationship>
      <Relationship type="Association" first="6" second="0">
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
        <Direction>Bidirectional</Direction>
        <AssociationType>Aggregation</AssociationType>
      </Relationship>
      <Relationship type="Association" first="6" second="4">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <Direction>Bidirectional</Direction>
        <AssociationType>Composition</AssociationType>
      </Relationship>
      <Relationship type="Association" first="6" second="5">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <Direction>Bidirectional</Direction>
        <AssociationType>Aggregation</AssociationType>
      </Relationship>
      <Relationship type="Association" first="0" second="5">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <Direction>Bidirectional</Direction>
        <AssociationType>Aggregation</AssociationType>
      </Relationship>
      <Relationship type="Association" first="0" second="9">
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
        <Direction>Bidirectional</Direction>
        <AssociationType>Aggregation</AssociationType>
      </Relationship>
      <Relationship type="Association" first="6" second="10">
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
        <Direction>Bidirectional</Direction>
        <AssociationType>Aggregation</AssociationType>
      </Relationship>
      <Relationship type="Association" first="4" second="8">
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
        <Direction>Bidirectional</Direction>
        <AssociationType>Aggregation</AssociationType>
      </Relationship>
      <Relationship type="Association" first="12" second="13">
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
        <Direction>Unidirectional</Direction>
        <AssociationType>Composition</AssociationType>
      </Relationship>
      <Relationship type="Generalization" first="0" second="11">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
      </Relationship>
      <Relationship type="Generalization" first="6" second="11">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
      </Relationship>
      <Relationship type="Generalization" first="12" second="11">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
      </Relationship>
      <Relationship type="Generalization" first="13" second="11">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
      </Relationship>
      <Relationship type="Association" first="12" second="14">
        <Label>
        </Label>
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <Direction>Unidirectional</Direction>
        <AssociationType>Aggregation</AssociationType>
      </Relationship>
    </Relationships>
  </ProjectItem>
</Project>